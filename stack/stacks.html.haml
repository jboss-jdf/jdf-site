---
layout: default
title: 'JBoss Stacks'
---
- page.javascripts = [ "#{site.base_url}/javascripts/jquery-datatables.js" ] 

:markdown
  JBoss Stacks allows you to easily choose and use a stack of JBoss runtimes, frameworks and tools. 

  The JBoss BOMs project allows you to easily  use your stack of choice. 

  The JDF plugin allows you to easily add stacks to your project using Forge.

  ------------------------------------------

.stacks

  %table.table.table-bordered#runtimes
    %thead
      %tr
        %th Release
        %th Suggested Runtime
        %th Suggested BOM
        %th Suggested Archetype
        %th Download
        %th Component Matrix
        %th.hidden Runtime ID
    - site.stacks.minorReleases.each do |mr|
      %tr
        %td 
          %strong  #{mr.name} #{mr.version}
        %td 
          #{mr.recommendedRuntime.name}
        %td
          %a.modal-link{"data-toggle"=>"modal", :href=>"##{mr.recommendedRuntime.defaultBom.bom.id}"}
            #{mr.recommendedRuntime.defaultBom.bom.name} 
        %td 
          %a.modal-link{"data-toggle"=>"modal", :href=>"##{mr.recommendedRuntime.defaultArchetype.archetype.id}"}
            #{mr.recommendedRuntime.defaultArchetype.archetype.name}
        %td.centered
          - if mr.recommendedRuntime.downloadUrl != nil
            %a{:href => mr.recommendedRuntime.downloadUrl}
              %img{:src=>"#{site.base_url}/images/glyphicons/glyphicons_181_download_alt.png"}
          - if mr.recommendedRuntime.downloadUrl == nil
            %a{:href => mr.recommendedRuntime.url}
              %img{:src=>"#{site.base_url}/images/glyphicons/glyphicons_329_web_browser.png"}
        %td 
          - if mr.recommendedRuntime.labels['pom'] != nil
            %a.modal-link{"data-toggle"=>"modal", :href=>"#pom_#{mr.recommendedRuntime.id}"}
              %img{:src=>"#{site.base_url}/images/glyphicons/glyphicons_023_cogwheels.png"}
        %td.hidden #{mr.object_id}
  
  -# Create Archetypes Modal Panes
  - site.stacks.availableArchetypes.each do |archetype|
    %div.modal.hide{:id=>"#{archetype.id}"}
      .modal-header
        %a.close{:data=>{:dismiss=>'modal'}}
          %i.icon-remove
        %h3 #{archetype.name}
      .modal-body.clearfix
        #{archetype.description}
        %p
        %br
        To use the archetype to generate a new project, you should run:
        %pre
          %code
            = preserve do
              :escaped
                mvn archetype:generate \
                  -DarchetypeGroupId=#{archetype.groupId} \
                  -DarchetypeArtifactId=#{archetype.artifactId} \
                  -DarchetypeVersion=#{archetype.recommendedVersion} 
        
        %p
        %br
        %h5 Other versions of this Archetype
        %ul
        - site.stacks.availableArchetypeVersions.each do |av|
          - if (av.archetype.id == archetype.id)
            %li
              %a{:onclick=>"change_archetype_version(this, $('##{archetype.id} pre code'));"} - #{av.version}
              = '(Recommended version for this Archetype)' unless archetype.recommendedVersion != av.version
        %p
        More information: See
        %a(href="#{site.base_url}/quickstarts/jboss-as-quickstart/guide/Archetype/")  Getting Started Developing Applications

  -# Create BOMs Modal Panes
  - site.stacks.availableBoms.each do |bom|
    %div.modal.hide{:id=>"#{bom.id}"}
      .modal-header
        %a.close{:data=>{:dismiss=>'modal'}}
          %i.icon-remove
        %h3 #{bom.name}
      .modal-body.clearfix
        #{bom.description}
        %p
        %br
        %p To use the BOM, import into your dependency management:
        %pre
          %code#example
            = preserve do
              :escaped
                <dependencyManagement>
                    <dependencies>
                        <dependency>
                            <groupId>#{bom.groupId}</groupId>
                            <artifactId>#{bom.artifactId}</artifactId>
                            <version>#{bom.recommendedVersion}</version>
                            <type>pom</type>
                            <scope>import</scope>
                        </dependency>
                    </dependencies>
                </dependencyManagement>
        - site.stacks.availableBomVersions.each do |bv|
          - if (bv.bom.id == bom.id)
            - if bv.labels['jbossASPluginVersion'] != nil
              = partial('plugininfo.html.haml')
              - break
        %p
        %br
        %h5 Other Versions of this BOM
        %ul
          - site.stacks.availableBomVersions.each do |bv|
            - if (bv.bom.id == bom.id)
              %li
                %a{:onclick=>"change_bom_version(this, $('##{bom.id} #example'));"} - #{bv.version} 
                = '(Recommended version for this BOM)' unless bom.recommendedVersion != bv.version
    
  -# Create POM modal
  - site.stacks.minorReleases.each do |mr|
    %div.modal.hide{:id=>"pom_#{mr.recommendedRuntime.id}"}
      .modal-header
        %a.close{:data=>{:dismiss=>'modal'}}
          %i.icon-remove
        %h3 Matrix for #{mr.recommendedRuntime.name}
        .modal-body.clearfix
          :markdown
            Sometimes you will need to debug JBoss Application Server sources. In most cases you can use the JBoss Tools feature called JBoss Sources Lookup. To demonstrate the use of this plugin take a look on following [screencast](http://screencast.com/t/i6k9hzkjViOs).
          %p
          %br
          If you need to debug some other internal components (JSF impl for example) you can add the specified Impl version to application pom.xml.
          %br
          First import JBoss AS pom.xml
          %br
          %pre
            %code#example
              = preserve do
                :escaped
                  <dependencyManagement>
                  . . .
                    <dependency>
                        <groupId>#{mr.recommendedRuntime.groupId}</groupId>
                        <artifactId>#{mr.recommendedRuntime.artifactId}</artifactId>
                        <version>#{mr.recommendedRuntime.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                  . . .
                  </dependencyManagement>

          %br
          %p
          The you can add the specified dependency to you pom.xml
          %br
          %pre
            %code#example
              = preserve do
                :escaped
                  <dependency>
                      <groupId>com.sun.faces</groupId>
                      <artifactId>jsf-impl</artifactId>
                      <version>${version.javax.faces.jsf-impl}</version>
                      <scope>provided</scope>
                  </dependency>
          %p
          %br
          To discover what's the right implementation version used on a specific Runtime, you can consult the 
          %a{:href=>mr.recommendedRuntime.labels['pom'],:target=>"_blank"} #{mr.recommendedRuntime.name} pom.xml

  .hidden
    - site.stacks.minorReleases.each do |mr|
      -# Create BOM Table for each Runtime 
      %table{:id => "boms#{mr.object_id}", :class => "table table-bordered"}
        %thead
          %th Available Boms for #{mr.recommendedRuntime.name}
          %th Bom version
        - mr.recommendedRuntime.boms.each do |bom_version|
          %tr
            %td
              %a.modal-link{"data-toggle"=>"modal", :href=>"##{bom_version.bom.id}"}
                #{bom_version.bom.name}
            %td 
              %a.modal-link{"data-toggle"=>"modal", :href=>"##{bom_version.bom.id}"}
                #{bom_version.version}
      -# Create Archetypes Table for each Runtime 
      %table{:id=>"archetypes#{mr.object_id}", :class => "table table-bordered"}
        %thead
          %th Available Archetypes for #{mr.recommendedRuntime.name}
          %th Archetype version
        - mr.recommendedRuntime.archetypes.each do |archetype_version|
          %tr
            %td
              %a.modal-link{"data-toggle"=>"modal", :href=>"##{archetype_version.archetype.id}"}
                #{archetype_version.archetype.name}
            %td
              %a.modal-link{"data-toggle"=>"modal", :href=>"##{archetype_version.archetype.id}"}      
                #{archetype_version.version}

:javascript

  function change_bom_version(origin, destination){
    var newValue = origin.firstChild.data.substring(2);
    var allContent = destination.text();
    var start = allContent.indexOf('<version>') + '<version>'.length;
    var end = allContent.indexOf('</version>');
    var oldContent = allContent.substring(start,end);
    var newContent = allContent.replace(oldContent, newValue);
    destination.text(newContent);
  }

  function change_archetype_version(origin, destination){
    var newValue = origin.firstChild.data.substring(2);
    var allContent = destination.text();
    var start = allContent.indexOf('-DarchetypeVersion=') + '-DarchetypeVersion='.length;
    var oldContent = allContent.substring(start);
    var newContent = allContent.replace(oldContent, newValue);
    destination.text(newContent);
  }

   /* Formating function for row details */
  function fnFormatDetails ( oTable, nTr )
  {
      var aData = oTable.fnGetData( nTr );
      var sTableBoms =  document.getElementById('boms'+ aData[7]).outerHTML;
      var sTableArchetypes =  document.getElementById('archetypes'+ aData[7]).outerHTML;
      return sTableBoms + sTableArchetypes;
  }

  $(document).ready(function() {

       /*
      * Insert a 'details' column to the table
      */
      var nCloneTh = document.createElement( 'th' );
      var nCloneTd = document.createElement( 'td' );
      nCloneTd.innerHTML = '<img id="open_icon" src="#{site.base_url}/images/details_open.png">';
      nCloneTd.className = "centered";
       
      $('#runtimes thead tr').each( function () {
          this.insertBefore( nCloneTh, this.childNodes[0] );
      } );
       
      $('#runtimes tbody tr').each( function () {
          this.insertBefore(  nCloneTd.cloneNode( true ), this.childNodes[0] );
      } );
       
      /*
      * Initialse DataTables, with no sorting on the 'details' column
      */
      var oTable = $('#runtimes').dataTable(  {
        "bPaginate": false,
        "bLengthChange": false,
        "bFilter": false,
        "bSort": false,
        "bInfo": false,
        "bAutoWidth": false
      });
       
      /* Add event listener for opening and closing details
      * Note that the indicator for showing which row is open is not controlled by DataTables,
      * rather it is done here
      */
      $('#open_icon').live('click', function () {
          var nTr = $(this).parents('tr')[0];
          if ( oTable.fnIsOpen(nTr) )
          {
              /* This row is already open - close it */
              this.src = "#{site.base_url}/images/details_open.png";
              oTable.fnClose( nTr );
          }
          else
          {
              /* Open this row */
              this.src = "#{site.base_url}/images/details_close.png";
              oTable.fnOpen( nTr, fnFormatDetails(oTable, nTr), 'details' );
          }
      } );

      /* Open modal dialog based on url fragments */
      if (location.hash) {
        var id = location.hash
        $(id).modal('show');
      }

  } );

